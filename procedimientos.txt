
+++++++++++++++++++++++++++++++++++++++++++++++++
CREATE PROCEDURE acientos_ocupados(
@id_presentacion int)
AS
BEGIN
	IF EXISTS(SELECT*FROM presentacion where id_presentacion=@id_presentacion)
	BEGIN
	SELECT tiquete.aciento FROM tiquete inner join presentacion on tiquete.id_presentacion=presentacion.id_presentacion where presentacion.id_presentacion=@id_presentacion
	END
	
	ELSE
	BEGIN 
	SELECT 2 as 'respuesta'
	END
	 
END

-----------------------------------

CREATE PROCEDURE busca_peli_caategoria(
@categoria varchar(50))
AS
BEGIN
	IF EXISTS(SELECT*FROM pelicula where categoria=@categoria)
	BEGIN
	SELECT presentacion.id_presentacion, pelicula.nombre,pelicula.imagen, pelicula.categoria, pelicula.idioma,horario.hora,sala.numero_sala FROM pelicula inner join presentacion on pelicula.id_peli=presentacion.id_pelicula inner join horario on horario.id_hora = presentacion.id_horario inner join sala on sala.id_sala=presentacion.id_sala where pelicula.categoria=@categoria
	END
	
	ELSE
	BEGIN 
	SELECT 2 as 'respuesta'
	END
	 
END

-------------------------------------

CREATE PROCEDURE busca_peli_idioma(
@idioma varchar(50))
AS
BEGIN
	IF EXISTS(SELECT*FROM pelicula where idioma=@idioma)
	BEGIN
	SELECT presentacion.id_presentacion, pelicula.nombre,pelicula.imagen, pelicula.categoria, pelicula.idioma,horario.hora,sala.numero_sala FROM pelicula inner join presentacion on pelicula.id_peli=presentacion.id_pelicula inner join horario on horario.id_hora = presentacion.id_horario inner join sala on sala.id_sala=presentacion.id_sala where pelicula.idioma=@idioma
	END
	
	ELSE
	BEGIN 
	SELECT 2 as 'respuesta'
	END
	 
END

--------------------------------------------

CREATE PROCEDURE busca_peli_nombre(
@nombre varchar(50))
AS
BEGIN
	IF EXISTS(SELECT*FROM pelicula where nombre=@nombre)
	BEGIN
	SELECT presentacion.id_presentacion, pelicula.nombre,pelicula.imagen, pelicula.categoria, pelicula.idioma,horario.hora,sala.numero_sala FROM pelicula inner join presentacion on pelicula.id_peli=presentacion.id_pelicula inner join horario on horario.id_hora = presentacion.id_horario inner join sala on sala.id_sala=presentacion.id_sala where pelicula.nombre=@nombre
	END
	
	ELSE
	BEGIN 
	SELECT 2 as 'respuesta'
	END
	 
END

---------------------------------------------
CREATE PROCEDURE compra_taquilla(
@id_admin varchar(50),
@id_presentacion int,
@aciento int,
@cedula varchar(50))
AS
BEGIN

DECLARE
@num_factura int,
@num_tiquete int


--busca si existe la presentacion
IF EXISTS (SELECT * FROM presentacion where id_presentacion=@id_presentacion)
BEGIN

	--busca asiento libre
	IF EXISTS (SELECT *FROM tiquete inner join presentacion on tiquete.id_presentacion=presentacion.id_presentacion where tiquete.aciento=@aciento AND presentacion.id_presentacion=@id_presentacion )
	BEGIN
	--aciento ocupado
	SELECT 'ocupado' as 'respuesta'
	END
	--aciento libre
	ELSE
	BEGIN
		--revisa si el usuario ya tiene una cuenta
		IF EXISTS (SELECT * FROM factura where id_cedula=@cedula AND estado='reservado')
		BEGIN
			SET @num_factura=(SELECT id_factura FROM factura where id_cedula=@cedula AND estado='reservado')
			
			UPDATE factura SET total=(total+4000)where id_factura=@num_factura
			
			INSERT INTO tiquete VALUES(@id_presentacion,@aciento)
			
			SET @num_tiquete=(SELECT IDENT_CURRENT('tiquete'))
			
			INSERT INTO factura_tiquete VALUES(@num_factura,@num_tiquete)
			
			if (@id_admin=0)
			begin
				
				INSERT INTO compras VALUES (@cedula,@num_tiquete)
				-- se agrego a la factura ya existente 
				SELECT @num_factura as 'respuesta'
			
			end
			
			else
			begin
			
				INSERT INTO ventas VALUES (@id_admin,@num_tiquete)
				
				INSERT INTO compras VALUES (@cedula,@num_tiquete)
				
				-- se agrego a la factura ya existente 
				SELECT @num_factura as 'respuesta'
				
			end	
				
			
			
		END
		--crea una cuenta nueva
		ELSE
		BEGIN
		
			INSERT INTO factura VALUES (@cedula,4000,'reservado')
			
			SET @num_factura=(SELECT IDENT_CURRENT('factura'))
			
			INSERT INTO tiquete VALUES(@id_presentacion,@aciento)
			
			SET @num_tiquete=(SELECT IDENT_CURRENT('tiquete'))
			
			INSERT INTO factura_tiquete VALUES(@num_factura,@num_tiquete)
			
			if (@id_admin=0)
			begin
				
				INSERT INTO compras VALUES (@cedula,@num_tiquete)
				-- se agrego a la factura ya existente 
				SELECT @num_factura as 'respuesta'
			
			end
			
			else
			begin
			
				INSERT INTO ventas VALUES (@id_admin,@num_tiquete)
				
				INSERT INTO compras VALUES (@cedula,@num_tiquete)
				
				-- se agrego a la factura ya existente 
				SELECT @num_factura as 'respuesta'
				
			end	
		
		END
		
	END
	 
END
--no existe presentacion 
ELSE
BEGIN
SELECT 'no existe' as 'respuesta'
END 

	
END

-----------------------------------------------------


CREATE PROCEDURE insert_admin

	@id_cedula varchar (50),
	@nombre varchar(50),
	@correo varchar(50),
	@pass varchar(50)
AS
BEGIN
	
	
	
if exists (SELECT * FROM admin where id_cedula=@id_cedula )
begin
	 
	 SELECT 2 as 'respuesta'
	 
end
	 
	 
else 
begin

	INSERT INTO admin VALUES(@id_cedula,@nombre,@correo,@pass)
	SELECT 1 as 'respuesta'
	
end

END

----------------------------------------------------

CREATE PROCEDURE insert_peli
	@nombre varchar(50),
	@categoria varchar(50),
	@idioma varchar(50),
	@imagen varchar(MAX)
AS
BEGIN
	
	
	
if exists (SELECT * FROM pelicula where nombre=@nombre AND idioma=@idioma)
begin
	 
	 SELECT 2 as 'respuesta'
	 
end
	 
	 
else 
begin

	INSERT INTO pelicula VALUES(@nombre,@categoria,@idioma,@imagen)
	SELECT 1 as 'respuesta'
	
end

END

-------------------------------------------------

CREATE PROCEDURE insert_presentacion
	@id_pelicula int,
	@hora varchar(50),
	@sala varchar(50)
AS
BEGIN
	declare 
	@id_hora int,
	@id_sala int
	
	
if exists (SELECT * FROM pelicula where id_peli=@id_pelicula )
begin
	
	
	SET @id_hora=(SELECT id_hora from horario where hora=@hora)
	SET @id_sala=(SELECT id_sala from sala where numero_sala=@sala)

	INSERT INTO presentacion VALUES(@id_pelicula,@id_hora,@id_sala)
	SELECT 1 as 'respuesta'
	 
end
	 
	 
else 
begin

	SELECT 2 as 'respuesta'
	
end

END
---------------------------------------------------

CREATE PROCEDURE insert_usuario

	@id_cedula varchar (50),
	@nombre varchar(50),
	@correo varchar(50),
	@pass varchar(50)
AS
BEGIN
	
	
	
if exists (SELECT * FROM usuario where id_cedula=@id_cedula )
begin
	 
	 SELECT 2 as 'respuesta'
	 
end
	 
	 
else 
begin

	INSERT INTO usuario VALUES(@id_cedula,@nombre,@correo,@pass)
	SELECT 1 as 'respuesta'
	
end

END

------------------------------------------------

CREATE PROCEDURE [dbo].[login]

	@id varchar (50),
	@pass varchar(50)
AS
BEGIN
	
	SET NOCOUNT ON;
	
	if exists (SELECT * FROM usuario where id_cedula=@id AND pass=@pass)
	 begin
	 
	 SELECT 1 as 'respuesta'
	 
	 end
	 
	 else if exists(SELECT *FROM admin where id_cedula=@id AND pass=@pass)
	 begin
	 
	 SELECT 2 as 'respuesta'
		
	 end
	 
	 else if exists (SELECT * FROM super_admin where id_super=@id AND pass=@pass)
	 BEGIN
	 
	 SELECT 3 as 'respuesta'
	 
	 END
	 
	 
else 
SELECT 4 as 'respuesta'
 
 
 
END
-------------------------------------------------

CREATE PROCEDURE pago(
@num_factura int,
@num_tarjeta int,
@fecha varchar(25),
@num_seguridad varchar(25)
)
	
AS
BEGIN
declare
@total int,
@saldo int
	
	IF EXISTS (SELECT * FROM tarjetas where num_tarjeta=@num_tarjeta AND fecha=@fecha AND num_seguridad=@num_seguridad)
	BEGIN
	
		SET @total=(SELECT total from factura where id_factura=@num_factura)
		
		SET @saldo=(SELECT saldo from tarjetas where num_tarjeta=@num_tarjeta)
		
		IF(@saldo>@total)
		BEGIN
			UPDATE tarjetas SET saldo=(@saldo-@total) where num_tarjeta=@num_tarjeta
			UPDATE factura SET estado='pagado' where id_factura=@num_factura
			
			SELECT 1 as 'respuesta'
		END	
		
		ELSE
		BEGIN
			--saldo insuficiente 
			SELECT 2 as 'respuesta'
		END
	
	
	
	END
	
	ELSE 
	BEGIN
	--saldo insuficiente
	SELECT 3 as 'respuesta'
	END
	
END

----------------------------------------------------

CREATE PROCEDURE update_peli
	@id_peli int,
	@nombre varchar(50),
	@categoria varchar(50),
	@idioma varchar(50)
AS
BEGIN
	
	
	
if exists (SELECT * FROM pelicula where id_peli=@id_peli )
begin
	 UPDATE pelicula SET nombre=@nombre, categoria=@categoria, idioma=@idioma where id_peli=@id_peli
	 SELECT 1 as 'respuesta'
	 
end
	 
	 
else 
begin

	
	SELECT 2 as 'respuesta'
	
end

END

------------------------------------------------------

CREATE PROCEDURE update_presentacion
	@id_presentacion int,
	@id_pelicula int,
	@hora varchar(50),
	@sala varchar(50)
AS
BEGIN
	declare 
	@id_hora int,
	@id_sala int
	
	
if exists (SELECT * FROM presentacion where id_presentacion=@id_presentacion )
begin

	SELECT 2 as 'respuesta'
	 
end
	 
	 
else 
begin

	
	SET @id_hora=(SELECT id_hora from horario where hora=@hora)
	SET @id_sala=(SELECT id_sala from sala where numero_sala=@sala)


	UPDATE presentacion SET id_pelicula=@id_pelicula,id_horario=@id_hora,id_sala=@id_sala WHERE id_presentacion=@id_presentacion
	SELECT 1 as 'respuesta'
	
end

END
